
package br.com.delphos.billing.braspag.conciliador.cliente;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import br.com.delphos.billing.braspag.pagador.cliente.PagadorTransaction;
import br.com.delphos.billing.enumeracoes.PropriedadeConfiguracao;
import br.com.delphos.billing.util.Configuracoes;


/**
 * Webservice para download de arquivos exportados pelo Reconciliation.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ReconciliationFilesWebService", targetNamespace = "https://reconciliation.braspag.com.br", wsdlLocation = "classpath:META-INF/wsdl/braspag/ReconciliationFilesWebService.wsdl")
public class ReconciliationFilesWebService
    extends Service
{
    private final static Logger logger = LoggerFactory.getLogger(PagadorTransaction.class);
    private final static URL RECONCILIATIONFILESWEBSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = Configuracoes.getObjeto(PropriedadeConfiguracao.UrlWsdlPagadorReconciliation, URL.class);
        } catch (Exception ex) {
            logger.error("Erro ao carregar a URL de execução do serviço PagadorReconciliation, favor rever as configurações em 'configuracoes.properties'.", e);
        }
        RECONCILIATIONFILESWEBSERVICE_WSDL_LOCATION = url;
    }

    public ReconciliationFilesWebService(URL wsdlLocation) {
        super(wsdlLocation, new QName("https://reconciliation.braspag.com.br", "ReconciliationFilesWebService"));
    }

    public ReconciliationFilesWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ReconciliationFilesWebService() {
        super(RECONCILIATIONFILESWEBSERVICE_WSDL_LOCATION, new QName("https://reconciliation.braspag.com.br", "ReconciliationFilesWebService"));
    }

    /**
     * 
     * @return
     *     returns ReconciliationFilesWebServiceSoap
     */
    @WebEndpoint(name = "ReconciliationFilesWebServiceSoap")
    public ReconciliationFilesWebServiceSoap getReconciliationFilesWebServiceSoap() {
        return super.getPort(new QName("https://reconciliation.braspag.com.br", "ReconciliationFilesWebServiceSoap"), ReconciliationFilesWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ReconciliationFilesWebServiceSoap
     */
    @WebEndpoint(name = "ReconciliationFilesWebServiceSoap")
    public ReconciliationFilesWebServiceSoap getReconciliationFilesWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("https://reconciliation.braspag.com.br", "ReconciliationFilesWebServiceSoap"), ReconciliationFilesWebServiceSoap.class, features);
    }

}
